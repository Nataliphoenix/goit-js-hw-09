{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,UAAWF,SAASC,cAAc,uBAClCE,cAAeH,SAASC,cAAc,sBACtCG,WAAYJ,SAASC,cAAc,wBACnCI,kBAAmBL,SAASC,cAAc,0BAG5CH,EAAKC,KAAKO,iBAAiB,UAE3B,SAAuBC,G,kBAwBvB,IAAuBC,EAAUC,GAAVD,EAhBLE,EAgBeD,EAhBZE,EAiBZ,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEL,WAAUC,UAEpBK,EAAO,CAAEN,WAAUC,S,GAEpBA,E,KAxBAS,MAAK,SAAAC,GAAWA,EAARX,S,IAAUC,EAAKU,EAALV,MACjBW,EAAAxB,GAASyB,OAAOC,QACd,uBAAiCC,OAARb,EAAE,QAAYa,OAANd,EAAM,M,IAG1Ce,OAAM,SAAAL,GAAWA,EAARX,S,IAAUC,EAAKU,EAALV,MAClBW,EAAAxB,GAASyB,OAAOI,QACd,sBAA8BF,OAARb,EAAE,QAAYa,OAANd,EAAM,M,IAG1CE,GAASR,C,EAlBXI,EAAEmB,iBAMD,IAJD,IAAIf,EAAQb,EAAKI,UAAUyB,cACvBxB,EAAgBL,EAAKK,cAAcwB,cACnCvB,EAAaN,EAAKM,WAAWuB,cAEvBC,EAAI,EAAGA,GAAKxB,EAAYwB,GAAG,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delayUser: document.querySelector('input[name=\"delay\"]'),\n  stepDelayUser: document.querySelector('input[name=\"step\"]'),\n  amountUser: document.querySelector('input[name=\"amount\"]'),\n  createPromisesBtn: document.querySelector('button[type=\"submit\"]'),\n}\n\nrefs.form.addEventListener('submit', onSubmitClick);\n\nfunction onSubmitClick(e) {\n  e.preventDefault();\n\n  let delay = refs.delayUser.valueAsNumber;\n  let stepDelayUser = refs.stepDelayUser.valueAsNumber;\n  let amountUser = refs.amountUser.valueAsNumber;\n\n   for (let i = 1; i <= amountUser; i+=1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${i} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${i} in ${delay}ms`\n        );\n      });\n    delay += stepDelayUser;\n  }\n\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delayUser","stepDelayUser","amountUser","createPromisesBtn","addEventListener","e","position","delay","i","delay1","Promise","resolve","reject","setTimeout","Math","random","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","preventDefault","valueAsNumber","i1","_loop"],"version":3,"file":"03-promises.01368246.js.map"}
{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,UAAWF,SAASC,cAAc,uBAClCE,cAAeH,SAASC,cAAc,sBACtCG,WAAYJ,SAASC,cAAc,wBACnCI,kBAAmBL,SAASC,cAAc,0BA6B5C,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAnCbV,EAAKC,KAAKgB,iBAAiB,UAE3B,SAAuBC,GACrBA,EAAEC,iBAEF,IAAIC,EAAQpB,EAAKI,UAAUiB,cACvBhB,EAAgBL,EAAKK,cAAcgB,cACnCf,EAAaN,EAAKM,WAAWe,cAEhC,IAAK,IAAIC,EAAI,EAAGA,GAAKhB,EAAYgB,GAAG,EACnCd,EAAcc,EAAGF,GACdG,MAAK,EAACd,SAAEA,EAAQC,MAAEA,MACjBc,EAAA1B,GAAS2B,OAAOC,QACd,uBAAqBJ,QAAUZ,MAAU,IAG5CiB,OAAM,EAAClB,SAAEA,EAAQC,MAAEA,MAClBc,EAAA1B,GAAS2B,OAAOG,QACd,sBAAoBN,QAAQZ,MAAU,IAG5CU,GAASf,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delayUser: document.querySelector('input[name=\"delay\"]'),\n  stepDelayUser: document.querySelector('input[name=\"step\"]'),\n  amountUser: document.querySelector('input[name=\"amount\"]'),\n  createPromisesBtn: document.querySelector('button[type=\"submit\"]'),\n}\n\nrefs.form.addEventListener('submit', onSubmitClick);\n\nfunction onSubmitClick(e) {\n  e.preventDefault();\n\n  let delay = refs.delayUser.valueAsNumber;\n  let stepDelayUser = refs.stepDelayUser.valueAsNumber;\n  let amountUser = refs.amountUser.valueAsNumber;\n\n   for (let i = 1; i <= amountUser; i+=1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${i} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${i} in ${delay}ms`\n        );\n      });\n    delay += stepDelayUser;\n  }\n\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delayUser","stepDelayUser","amountUser","createPromisesBtn","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","delay1","valueAsNumber","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.6cdb0ce0.js.map"}